name: Deploy to Production Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Test Auth Server
      run: |
        cd auth-server
        pip install -r requirements.txt
        python -m pytest tests/ || echo "No tests found for auth-server"
    
    - name: Test RAG Server
      run: |
        cd rag
        pip install -r requirements.txt
        python -m pytest tests/ || echo "No tests found for rag"

  build-quill:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Build Production Quill Extension
      run: |
        cd quill
        npm install
        npm run compile
        # Create production build with server endpoint
        PROD_SERVER=45.76.61.43 npm run build
    
    - name: Upload Quill Artifact
      uses: actions/upload-artifact@v3
      with:
        name: quill-production
        path: quill/quill-*.vsix

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build-quill]
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 45.76.61.43 >> ~/.ssh/known_hosts
    
    - name: Deploy Configuration Files
      run: |
        # Upload configuration files to server
        scp -o StrictHostKeyChecking=no config/auth-server.prod.env root@45.76.61.43:/opt/ra-prod/config/
        scp -o StrictHostKeyChecking=no config/rag-server.prod.env root@45.76.61.43:/opt/ra-prod/config/
        scp -o StrictHostKeyChecking=no config/production.env root@45.76.61.43:/opt/ra-prod/config/
        
    - name: Deploy Auth Server
      run: |
        chmod +x scripts/deploy-auth-server.sh
        ./scripts/deploy-auth-server.sh
      env:
        SERVER_HOST: 45.76.61.43
        SERVER_USER: root
        SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
    
    - name: Deploy RAG Server
      run: |
        chmod +x scripts/deploy-rag.sh
        ./scripts/deploy-rag.sh
      env:
        SERVER_HOST: 45.76.61.43
        SERVER_USER: root
        SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
    
    - name: Health Check
      run: |
        sleep 10
        curl -f http://45.76.61.43:5000/health || exit 1
        curl -f http://45.76.61.43:5001/health || exit 1
        echo "Health checks passed!"

  release:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Quill Artifact
      uses: actions/download-artifact@v3
      with:
        name: quill-production
        path: ./artifacts
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Production deployment completed successfully
          - Auth Server deployed to 45.76.61.43:5000
          - RAG Server deployed to 45.76.61.43:5001
          - Quill extension built for production
        draft: false
        prerelease: false