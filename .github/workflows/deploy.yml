name: Deploy to Production Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-quill:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'quill/package-lock.json'
    
    - name: Build Production Quill Extension
      run: |
        cd quill
        npm ci --prefer-offline
        npm run compile
        # Increment version first
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
        PATCH_VERSION=$((${VERSION_PARTS[2]} + 1))
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
        npm version $NEW_VERSION --no-git-tag-version
        # Build VSIX with npx (cached)
        npx --yes @vscode/vsce@latest package
    
    - name: Upload Quill Artifact
      uses: actions/upload-artifact@v4
      with:
        name: quill-production
        path: quill/quill-*.vsix

  deploy:
    runs-on: ubuntu-latest
    needs: build-quill
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H 45.76.61.43 >> ~/.ssh/known_hosts
    
    - name: Deploy Configuration Files
      run: |
        # Upload configuration files to server
        scp -o StrictHostKeyChecking=no config/auth-server.prod.env root@45.76.61.43:/opt/ra-prod/config/
        scp -o StrictHostKeyChecking=no config/rag-server.prod.env root@45.76.61.43:/opt/ra-prod/config/
        scp -o StrictHostKeyChecking=no config/production.env root@45.76.61.43:/opt/ra-prod/config/
        
    - name: Deploy Auth Server
      run: |
        chmod +x scripts/deploy-auth-server.sh
        ./scripts/deploy-auth-server.sh
      env:
        SERVER_HOST: 45.76.61.43
        SERVER_USER: root
        SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
    
    - name: Deploy RAG Server
      run: |
        chmod +x scripts/deploy-rag.sh
        ./scripts/deploy-rag.sh
      env:
        SERVER_HOST: 45.76.61.43
        SERVER_USER: root
        SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
    
    - name: Health Check
      run: |
        echo "‚è≥ Waiting for services to fully start..."
        sleep 15
        
        echo "üîç Testing Auth Server health..."
        for i in {1..5}; do
          if curl -f http://45.76.61.43:5000/health; then
            echo "‚úÖ Auth Server health check passed"
            break
          else
            echo "‚ö†Ô∏è Auth Server health check failed (attempt $i/5)"
            if [ $i -eq 5 ]; then exit 1; fi
            sleep 5
          fi
        done
        
        echo "üîç Testing RAG Server health..."
        for i in {1..5}; do
          if curl -f http://45.76.61.43:5001/health; then
            echo "‚úÖ RAG Server health check passed"
            break
          else
            echo "‚ö†Ô∏è RAG Server health check failed (attempt $i/5)"
            if [ $i -eq 5 ]; then exit 1; fi
            sleep 5
          fi
        done
        
        echo "üéâ All health checks passed!"

  release:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Quill Artifact
      uses: actions/download-artifact@v4
      with:
        name: quill-production
        path: ./artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Production deployment completed successfully
          - Auth Server deployed to 45.76.61.43:5000
          - RAG Server deployed to 45.76.61.43:5001
          - Quill extension built for production
        files: ./artifacts/quill-*.vsix
        draft: false
        prerelease: false